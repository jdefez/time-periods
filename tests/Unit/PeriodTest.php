<?php

namespace Jean\tests;

use Carbon\Carbon;
use Jean\TimePeriods\Period;
use Jean\TimePeriods\PeriodIterator;
use PHPUnit\Framework\TestCase;

class PeriodTest extends TestCase
{
    public function setUp(): void
    {
        parent::setUp();
    }

    /** @test */
    public function it_sets_end_at_date(): void
    {
        $period = new Period(
            new Carbon('2020-01-30'),
            new Carbon('2019-05-30'),
            1
        );

        $expected = new Carbon('2019-02-29');

        $this->assertTrue(
            $expected->isSameAs($period->end_at),
            sprintf(
                '%s is not equal to %s',
                $expected->format('Y-m-d H:i:s'),
                $period->end_at->format('Y-m-d H:i:s')
            )
        );
    }

    public function periodSettingsProvider(): array
    {
        return [
            'period starting on the 1rst of the month' => [
                new Carbon('2019-05-01'),
                1,
                2,
                [
                    '2019-05-01 00:00:00 - 2019-06-01 00:00:00',
                    '2019-06-01 00:00:00 - 2019-07-01 00:00:00',
                    '2019-07-01 00:00:00 - 2019-08-01 00:00:00',
                    '2019-08-01 00:00:00 - 2019-09-01 00:00:00',
                    '2019-09-01 00:00:00 - 2019-10-01 00:00:00',
                    '2019-10-01 00:00:00 - 2019-11-01 00:00:00',
                    '2019-11-01 00:00:00 - 2019-12-01 00:00:00',
                    '2019-12-01 00:00:00 - 2020-01-01 00:00:00',
                    '2020-01-01 00:00:00 - 2020-02-01 00:00:00',
                    '2020-02-01 00:00:00 - 2020-03-01 00:00:00',
                    '2020-03-01 00:00:00 - 2020-04-01 00:00:00',
                    '2020-04-01 00:00:00 - 2020-05-01 00:00:00',
                    '2020-05-01 00:00:00 - 2020-06-01 00:00:00',
                    '2020-06-01 00:00:00 - 2020-07-01 00:00:00',
                    '2020-07-01 00:00:00 - 2020-08-01 00:00:00',
                    '2020-08-01 00:00:00 - 2020-09-01 00:00:00',
                    '2020-09-01 00:00:00 - 2020-10-01 00:00:00',
                    '2020-10-01 00:00:00 - 2020-11-01 00:00:00',
                    '2020-11-01 00:00:00 - 2020-12-01 00:00:00',
                    '2020-12-01 00:00:00 - 2021-01-01 00:00:00',
                    '2021-01-01 00:00:00 - 2021-02-01 00:00:00',
                    '2021-02-01 00:00:00 - 2021-03-01 00:00:00',
                    '2021-03-01 00:00:00 - 2021-04-01 00:00:00',
                    '2021-04-01 00:00:00 - 2021-05-01 00:00:00',
                ]
            ],
            'period starting on the 30th of the month' => [
                new Carbon('2019-05-30'),
                1,
                2,
                [
                    '2019-05-30 00:00:00 - 2019-06-30 00:00:00',
                    '2019-06-30 00:00:00 - 2019-07-30 00:00:00',
                    '2019-07-30 00:00:00 - 2019-08-30 00:00:00',
                    '2019-08-30 00:00:00 - 2019-09-30 00:00:00',
                    '2019-09-30 00:00:00 - 2019-10-30 00:00:00',
                    '2019-10-30 00:00:00 - 2019-11-30 00:00:00',
                    '2019-11-30 00:00:00 - 2019-12-30 00:00:00',
                    '2019-12-30 00:00:00 - 2020-01-30 00:00:00',
                    '2020-01-30 00:00:00 - 2020-02-29 00:00:00',
                    '2020-02-29 00:00:00 - 2020-03-30 00:00:00',
                    '2020-03-30 00:00:00 - 2020-04-30 00:00:00',
                    '2020-04-30 00:00:00 - 2020-05-30 00:00:00',
                    '2020-05-30 00:00:00 - 2020-06-30 00:00:00',
                    '2020-06-30 00:00:00 - 2020-07-30 00:00:00',
                    '2020-07-30 00:00:00 - 2020-08-30 00:00:00',
                    '2020-08-30 00:00:00 - 2020-09-30 00:00:00',
                    '2020-09-30 00:00:00 - 2020-10-30 00:00:00',
                    '2020-10-30 00:00:00 - 2020-11-30 00:00:00',
                    '2020-11-30 00:00:00 - 2020-12-30 00:00:00',
                    '2020-12-30 00:00:00 - 2021-01-30 00:00:00',
                    '2021-01-30 00:00:00 - 2021-02-28 00:00:00',
                    '2021-02-28 00:00:00 - 2021-03-30 00:00:00',
                    '2021-03-30 00:00:00 - 2021-04-30 00:00:00',
                    '2021-04-30 00:00:00 - 2021-05-30 00:00:00',
                    '2021-05-30 00:00:00 - 2021-06-30 00:00:00',
                ]
            ],
        ];
    }

    /**
     * @dataProvider periodSettingsProvider
     * @test
     */
    public function it_iterates_over_periods(
        Carbon $since,
        int $interval,
        int $years,
        array $expected
    ): void {
        $intervals = [];
        $iterator = new PeriodIterator($since, $interval, $years);
        foreach ($iterator->periods() as $period) {
            $intervals[] = $period->toString();
        }

        $this->assertEquals($expected, $intervals);
    }
}
